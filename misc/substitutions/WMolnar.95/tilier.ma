(*^::[	Information =	"This is a Mathematica Notebook file.  It contains ASCII text, and can be	transferred by email, ftp, or other text-file transfer utility.  It should	be read or edited using a copy of Mathematica or MathReader.  If you 	received this as email, use your mail application or copy/paste to save 	everything from the line containing (*^ down to the line containing ^*)	into a plain text file.  On some systems you may have to give the file a 	name ending with ".ma" to allow Mathematica to recognize it as a Notebook.	The line below identifies what version of Mathematica created this file,	but it can be opened using any other version as well.";	FrontEndVersion = "Macintosh Mathematica Notebook Front End Version 2.2";	MacintoshStandardFontEncoding; 		fontset = title, inactive, noPageBreakBelow, noPageBreakInGroup, nohscroll, preserveAspect, groupLikeTitle, center, M7, bold, e8,  24, "Times"; 	fontset = subtitle, inactive, noPageBreakBelow, noPageBreakInGroup, nohscroll, preserveAspect, groupLikeTitle, center, M7, bold, e6,  18, "Times"; 	fontset = subsubtitle, inactive, noPageBreakBelow, noPageBreakInGroup, nohscroll, preserveAspect, groupLikeTitle, center, M7, italic, e6,  14, "Times"; 	fontset = section, inactive, noPageBreakBelow, nohscroll, preserveAspect, groupLikeSection, grayBox, M22, bold, a20,  18, "Times"; 	fontset = subsection, inactive, noPageBreakBelow, nohscroll, preserveAspect, groupLikeSection, blackBox, M19, bold, a15,  14, "Times"; 	fontset = subsubsection, inactive, noPageBreakBelow, nohscroll, preserveAspect, groupLikeSection, whiteBox, M18, bold, a12,  12, "Times"; 	fontset = text, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, "Times"; 	fontset = smalltext, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  10, "Times"; 	fontset = input, noPageBreakInGroup, nowordwrap, preserveAspect, groupLikeInput, M42, N23, bold,  12, "Courier"; 	fontset = output, output, inactive, noPageBreakInGroup, nowordwrap, preserveAspect, groupLikeOutput, M42, N23, L-4,  12, "Courier"; 	fontset = message, inactive, noPageBreakInGroup, nowordwrap, preserveAspect, groupLikeOutput, M42, N23,  12, "Courier"; 	fontset = print, inactive, noPageBreakInGroup, nowordwrap, preserveAspect, groupLikeOutput, M42, N23,  12, "Courier"; 	fontset = info, inactive, noPageBreakInGroup, nowordwrap, preserveAspect, groupLikeOutput, M42, N23,  12, "Courier"; 	fontset = postscript, PostScript, formatAsPostScript, output, inactive, noPageBreakInGroup, nowordwrap, preserveAspect, groupLikeGraphics, M7, l34, w282, h287,  12, "Courier"; 	fontset = name, inactive, noPageBreakInGroup, nohscroll, preserveAspect, M7, italic, B32768,  10, "Times"; 	fontset = header, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7, italic,  12, "Times"; 	fontset = leftheader,  12, ""; 	fontset = footer, inactive, nohscroll, noKeepOnOnePage, preserveAspect, center, M7, italic,  12, "Times"; 	fontset = leftfooter,  12, ""; 	fontset = help, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, ""; 	fontset = clipboard, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, ""; 	fontset = completions, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, "Courier"; 	fontset = special1, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, ""; 	fontset = special2, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, ""; 	fontset = special3, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, ""; 	fontset = special4, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, ""; 	fontset = special5, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, ""; 	paletteColors = 128; remoteKernel = "Local"; ]:[font = input; initialization; preserveAspect; startGroup]*)R= {{0, 1, 0, 0, 0},    {0, 0, 1, 0, 0},    {0, 0, 0, 1, 0},    {0, 0, 0, 0, 1},    {-1,0, 0, 0, 0}};    Id= IdentityMatrix[5];Det[x Id - R] //Factor;(*:[font = input; initialization; preserveAspect; startGroup]*)rotate[1]:= Rrotate[0]:= Idrotate[-1]:= rotate[-1] = Inverse[R]rotate[n_Integer?Positive]:= rotate[n] = R.rotate[n-1]rotate[n_Integer?Negative]:= rotate[n] = rotate[-1].rotate[n+1]phi:= (1 + Sqrt[5])/2phibar:= (1 - Sqrt[5])/2p[x_]:= x.x - phi x + Idq[x_]:= x.x - phibar x + Idr[x_]:= x + Idv1= Last [NullSpace[p[R]]]v2= (rotate[2].v1 + rotate[3].v1) / phi //Simplifyv3= Last [NullSpace[q[R]]]v4= (rotate[2].v3 + rotate[3].v3) / phi //Simplifyv5= Flatten [NullSpace[r[R]]]basis = Map [#/ Sqrt[#.#] &, {v1, v2, v3, v4, v5}] //Nbasis.Transpose[basis] //Chopchangecoordinates[pt_]:= basis.pt(*:[font = output; output; inactive; preserveAspect]{1, (1 + 5^(1/2))/2, (1 + 5^(1/2))/2, 1, 0};[o]    1 + Sqrt[5]  1 + Sqrt[5]{1, -----------, -----------, 1, 0}         2            2:[font = output; output; inactive; preserveAspect]{(3 + 5^(1/2))/(1 + 5^(1/2)), 2/(1 + 5^(1/2)), -2/(1 + 5^(1/2)),    (-3 - 5^(1/2))/(1 + 5^(1/2)), -2};[o] 3 + Sqrt[5]       2           -2       -3 - Sqrt[5]{-----------, -----------, -----------, ------------, -2} 1 + Sqrt[5]  1 + Sqrt[5]  1 + Sqrt[5]  1 + Sqrt[5]:[font = output; output; inactive; preserveAspect]{1, (1 - 5^(1/2))/2, (1 - 5^(1/2))/2, 1, 0};[o]    1 - Sqrt[5]  1 - Sqrt[5]{1, -----------, -----------, 1, 0}         2            2:[font = output; output; inactive; preserveAspect]{(3 - 5^(1/2))/(1 + 5^(1/2)), 2/(1 + 5^(1/2)), -2/(1 + 5^(1/2)),    (-3 + 5^(1/2))/(1 + 5^(1/2)), (2*(-1 + 5^(1/2)))/(1 + 5^(1/2))};[o] 3 - Sqrt[5]       2           -2       -3 + Sqrt[5]  2 (-1 + Sqrt[5]){-----------, -----------, -----------, ------------, ----------------} 1 + Sqrt[5]  1 + Sqrt[5]  1 + Sqrt[5]  1 + Sqrt[5]     1 + Sqrt[5]:[font = output; output; inactive; preserveAspect]{1, -1, 1, -1, 1};[o]{1, -1, 1, -1, 1}:[font = output; output; inactive; preserveAspect]{{0.3717480344601844, 0.6015009550075457, 0.6015009550075457, 0.3717480344601844, 0},    {0.5116672736016927, 0.1954395075848548, -0.1954395075848548, -0.5116672736016927,     -0.6324555320336759}, {0.6015009550075458, -0.3717480344601846,     -0.3717480344601846, 0.6015009550075458, 0},    {0.1954395075848547, 0.5116672736016926, -0.5116672736016926, -0.1954395075848547,     0.6324555320336759}, {0.447213595499958, -0.447213595499958, 0.447213595499958,     -0.447213595499958, 0.447213595499958}};[o]{{0.371748, 0.601501, 0.601501, 0.371748, 0},    {0.511667, 0.19544, -0.19544, -0.511667, -0.632456},    {0.601501, -0.371748, -0.371748, 0.601501, 0},    {0.19544, 0.511667, -0.511667, -0.19544, 0.632456},    {0.447214, -0.447214, 0.447214, -0.447214, 0.447214}}:[font = output; output; inactive; preserveAspect; endGroup]{{1., 0, 0, 0, 0}, {0, 1., 0, 0, 0}, {0, 0, 1., 0, 0}, {0, 0, 0, 1., 0},    {0, 0, 0, 0, 1.}};[o]{{1., 0, 0, 0, 0}, {0, 1., 0, 0, 0}, {0, 0, 1., 0, 0}, {0, 0, 0, 1., 0},    {0, 0, 0, 0, 1.}}:[font = input; initialization; preserveAspect]*)inslab[pt_, offsetvector_]:= TrueQ [N[(changecoordinates[pt][[3]] - offsetvector[[2]])^2 +                                      (changecoordinates[pt][[4]] - offsetvector[[3]])^2 +                                      (changecoordinates[pt][[5]] - offsetvector[[1]])^2]                               < 5/4](*:[font = input; initialization; preserveAspect; startGroup]*)offset:= {1.18034, .001, .011}p1= {0, 0, 0, 0, -1} + v5inslab[p1, offset]project[p1]p2= p1 + {-1, 0, 0, 0, 0}inslab[p2, offset]project[p2]p3= p2 + {0, 0, 0, 1, 0}inslab[p3, offset]project[p3]p4= p3 + {1, 0, 0, 0, 0}inslab[p4, offset]project[p4](*:[font = output; output; inactive; preserveAspect]{1, -1, 1, -1, 0};[o]{1, -1, 1, -1, 0}:[font = output; output; inactive; preserveAspect]True;[o]True:[font = output; output; inactive; preserveAspect]project[{1, -1, 1, -1, 0}];[o]project[{1, -1, 1, -1, 0}]:[font = output; output; inactive; preserveAspect]{0, -1, 1, -1, 0};[o]{0, -1, 1, -1, 0}:[font = output; output; inactive; preserveAspect]True;[o]True:[font = output; output; inactive; preserveAspect]project[{0, -1, 1, -1, 0}];[o]project[{0, -1, 1, -1, 0}]:[font = output; output; inactive; preserveAspect]{0, -1, 1, 0, 0};[o]{0, -1, 1, 0, 0}:[font = output; output; inactive; preserveAspect]True;[o]True:[font = output; output; inactive; preserveAspect]project[{0, -1, 1, 0, 0}];[o]project[{0, -1, 1, 0, 0}]:[font = output; output; inactive; preserveAspect]{1, -1, 1, 0, 0};[o]{1, -1, 1, 0, 0}:[font = output; output; inactive; preserveAspect]True;[o]True:[font = output; output; inactive; preserveAspect; endGroup; endGroup]project[{1, -1, 1, 0, 0}];[o]project[{1, -1, 1, 0, 0}]:[font = subsection; inactive; preserveAspect; startGroup]Constructing a Large Patch of Penrose Tiles in R5:[font = text; inactive; preserveAspect]One first finds a single tile lying in the slab. At each stage, one has a  list of vertices, and a list of tiles expressed as lists of names of vertices,  and a list of vertices  around the boundary of the patch. For each edge on the boundary, one  finds the adjacent tile and replaces the edge in the string with  two edges (if tile parallel to tile found just before) or three edges (otherwise),and kills off the last new edge if parallel to the last tile:[font = input; preserveAspect]:[font = input; initialization; preserveAspect]*)InSlab=inslab;(*:[font = input; initialization; preserveAspect]*)InitialTile={p4,p3,p2,p1};(*:[font = input; initialization; preserveAspect]*)initboundary={ {1,2},{2,3},{3,4},{4,1}  };(*:[font = input; initialization; preserveAspect]*)initvertices=InitialTile;(*:[font = input; initialization; preserveAspect]*)inittiles={ {1,2,3,4} };(*:[font = text; inactive; preserveAspect] tiles and edges are given as lists of numbers; these numbers are indices in the list VerticesTiles is the list of all tiles; Boundary is the list of edges in the boundary of the patch:[font = text; inactive; preserveAspect]Exapnd from takes an edge and looks for the vector orth. to the edge that lands in the slab; if parallel to Last,  removes  last edge from NewList and adds two new edges; otherwise, adds three .  Edge is Boundary[[BoundaryIndex]];  if edge itself parallel to last, ignore and move on.   Directions are cyclic perms of +/- {0,0,0,1,0};  R shifts  these "counterclockwise":[font = input; initialization; preserveAspect]*)Dir[Edge_,Vertices_]:=Vertices[[Edge[[2]] ]]-Vertices[[Edge[[1]] ]](*:[font = input; initialization; preserveAspect]*)GetNorm[Edge_,Vertices_]:= (rr=R.Dir[Edge,Vertices]; e=Vertices[[Edge[[1]] ]]+rr;		While[ Not[InSlab[e,offset]], rr=R.rr; e=Vertices[[Edge[[1]] ]]+rr ];		rr)(*:[font = input; preserveAspect; startGroup]GetNorm[{2,3},initvertices]:[font = output; output; inactive; preserveAspect]{0, 0, -1, 0, 0};[o]{0, 0, -1, 0, 0}:[font = input; Cclosed; preserveAspect; startGroup]InSlab[initvertices[[4]],offset]:[font = output; output; inactive; preserveAspect; endGroup; endGroup]True;[o]True:[font = input; preserveAspect; startGroup]rolf=R.Dir[{2,3},initvertices];i=1;Snuff={};While[i<=10,i=i+1;Snuff=Join[Snuff,			{rolf}];rolf=R.rolf];Snuff:[font = output; output; inactive; preserveAspect; endGroup]{{0, 0, -1, 0, 0}, {0, -1, 0, 0, 0}, {-1, 0, 0, 0, 0}, {0, 0, 0, 0, 1},    {0, 0, 0, 1, 0}, {0, 0, 1, 0, 0}, {0, 1, 0, 0, 0}, {1, 0, 0, 0, 0},    {0, 0, 0, 0, -1}, {0, 0, 0, -1, 0}};[o]{{0, 0, -1, 0, 0}, {0, -1, 0, 0, 0}, {-1, 0, 0, 0, 0}, {0, 0, 0, 0, 1},    {0, 0, 0, 1, 0}, {0, 0, 1, 0, 0}, {0, 1, 0, 0, 0}, {1, 0, 0, 0, 0},    {0, 0, 0, 0, -1}, {0, 0, 0, -1, 0}}:[font = input; preserveAspect; startGroup]rolf=R.Dir[{3,4},initvertices];i=1;Snuff={Dir[{3,4},initvertices]};While[i<=10,i=i+1;Snuff=Join[Snuff,			{rolf,InSlab[initvertices[[3]]+rolf,offset]}];rolf=R.rolf];Snuff:[font = output; output; inactive; preserveAspect; endGroup]{{1, 0, 0, 0, 0}, {0, 0, 0, 0, -1}, False, {0, 0, 0, -1, 0}, False, {0, 0, -1, 0, 0},    True, {0, -1, 0, 0, 0}, False, {-1, 0, 0, 0, 0}, False, {0, 0, 0, 0, 1}, True,    {0, 0, 0, 1, 0}, True, {0, 0, 1, 0, 0}, False, {0, 1, 0, 0, 0}, True,    {1, 0, 0, 0, 0}, True};[o]{{1, 0, 0, 0, 0}, {0, 0, 0, 0, -1}, False, {0, 0, 0, -1, 0}, False, {0, 0, -1, 0, 0},    True, {0, -1, 0, 0, 0}, False, {-1, 0, 0, 0, 0}, False, {0, 0, 0, 0, 1}, True,    {0, 0, 0, 1, 0}, True, {0, 0, 1, 0, 0}, False, {0, 1, 0, 0, 0}, True,    {1, 0, 0, 0, 0}, True}:[font = input; preserveAspect]InSlab[ini:[font = text; inactive; preserveAspect]This gives a list; first elt is changed list of vertices; second is changed list of Newboundary, third is changed list of tiles:[font = input; initialization; preserveAspect; startGroup]*)ExpandFrom[{Vertices_,NewBoundary_,Tiles_,last_,BoundaryIndex_,Boundary_}]:=Block[{edge=Boundary[[BoundaryIndex]],v=Length[Vertices]},Block[{norm=GetNorm[edge,Vertices]},	If[Dir[edge,Vertices]===last,{Vertices,NewBoundary,Tiles,last,BoundaryIndex+1,Boundary} ,	If[norm===last, 	   {Join[Vertices,{Vertices[[edge[[2]]]]+norm}],		Join[Drop[NewBoundary,-1],{{v,v+1},{v+1,edge[[2]]} }],		Join[Tiles,{ {edge[[2]],edge[[1]],v,v+1} }] , norm,BoundaryIndex+1,Boundary},	(*Otherwise*)			{Join[Vertices,			  {Vertices[[edge[[1]]]]+norm,Vertices[[edge[[2]]]]+norm}],			Join[NewBoundary,{ {edge[[1]],v+1},{v+1,v+2},			             {v+2,edge[[2]]}   }],			Join[Tiles,{ {edge[[2]],edge[[1]],v+1,v+2} }],norm,BoundaryIndex+1,Boundary}		],ERROR] ] ]		(*:[font = message; inactive; preserveAspect; endGroup]General::spell1: Possible spelling error: new symbol name "edge"     is similar to existing symbol "Edge".:[font = input; initialization; preserveAspect; endGroup]*)WalkAround[{Vertices_,Boundary_,Tiles_}]:=	Drop[Nest[  ExpandFrom,  {Vertices,{},Tiles, splee,1,Boundary} , Length[Boundary]],-3]		(*:[font = input; initialization; preserveAspect]*)ExpandPatch[{Vertices_,Boundary_,Tiles_},n_]:=     Nest[ WalkAround,{Vertices,Boundary,Tiles} , n](*:[font = input; Cclosed; preserveAspect; startGroup]A=WalkAround[WalkAround[{initvertices,initboundary,inittiles}]]:[font = output; output; inactive; preserveAspect]{{{1, -1, 1, 0, 0}, {0, -1, 1, 0, 0}, {0, -1, 1, -1, 0}, {1, -1, 1, -1, 0},     {1, -1, 0, 0, 0}, {0, -1, 0, 0, 0}, {1, -1, 1, 0, 0}, {1, -1, 1, -1, 0},     {0, -1, 1, -1, 0}, {0, -1, 1, 0, 0}, {1, 0, 1, 0, 0}, {1, 0, 0, 0, 0},     {1, -1, 0, -1, 0}, {0, -1, 0, -1, 0}, {0, -1, 0, 0, 1}, {0, -1, 1, 0, 1},     {1, -1, 1, 0, 1}, {1, 0, 1, 0, 0}, {1, 0, 1, -1, 0}, {1, -1, 0, -1, 0},     {0, -1, 0, -1, 0}, {0, -1, 0, -1, 0}, {0, -1, 0, 0, 0}, {0, -1, 1, 0, 1},     {1, -1, 1, 0, 1}}, {{1, 11}, {11, 12}, {12, 5}, {5, 13}, {13, 14}, {14, 6},     {6, 15}, {15, 16}, {16, 17}, {17, 7}, {7, 18}, {18, 19}, {19, 8}, {8, 20},     {20, 21}, {21, 22}, {22, 23}, {23, 10}, {10, 24}, {24, 25}, {25, 1}},    {{1, 2, 3, 4}, {2, 1, 5, 6}, {3, 2, 7, 8}, {1, 4, 9, 10}, {5, 1, 11, 12},     {6, 5, 13, 14}, {2, 6, 15, 16}, {7, 2, 16, 17}, {8, 7, 18, 19}, {3, 8, 20, 21},     {9, 4, 21, 22}, {10, 9, 22, 23}, {1, 10, 24, 25}}};[o]{{{1, -1, 1, 0, 0}, {0, -1, 1, 0, 0}, {0, -1, 1, -1, 0}, {1, -1, 1, -1, 0},     {1, -1, 0, 0, 0}, {0, -1, 0, 0, 0}, {1, -1, 1, 0, 0}, {1, -1, 1, -1, 0},     {0, -1, 1, -1, 0}, {0, -1, 1, 0, 0}, {1, 0, 1, 0, 0}, {1, 0, 0, 0, 0},     {1, -1, 0, -1, 0}, {0, -1, 0, -1, 0}, {0, -1, 0, 0, 1}, {0, -1, 1, 0, 1},     {1, -1, 1, 0, 1}, {1, 0, 1, 0, 0}, {1, 0, 1, -1, 0}, {1, -1, 0, -1, 0},     {0, -1, 0, -1, 0}, {0, -1, 0, -1, 0}, {0, -1, 0, 0, 0}, {0, -1, 1, 0, 1},     {1, -1, 1, 0, 1}}, {{1, 11}, {11, 12}, {12, 5}, {5, 13}, {13, 14}, {14, 6},     {6, 15}, {15, 16}, {16, 17}, {17, 7}, {7, 18}, {18, 19}, {19, 8}, {8, 20},     {20, 21}, {21, 22}, {22, 23}, {23, 10}, {10, 24}, {24, 25}, {25, 1}},    {{1, 2, 3, 4}, {2, 1, 5, 6}, {3, 2, 7, 8}, {1, 4, 9, 10}, {5, 1, 11, 12},     {6, 5, 13, 14}, {2, 6, 15, 16}, {7, 2, 16, 17}, {8, 7, 18, 19}, {3, 8, 20, 21},     {9, 4, 21, 22}, {10, 9, 22, 23}, {1, 10, 24, 25}}}:[font = input; preserveAspect; startGroup]A[[1]]:[font = output; output; inactive; preserveAspect; endGroup]{{1, -1, 1, 0, 0}, {0, -1, 1, 0, 0}, {0, -1, 1, -1, 0}, {1, -1, 1, -1, 0},    {1, -1, 0, 0, 0}, {0, -1, 0, 0, 0}, {1, -1, 1, 0, 0}, {1, -1, 1, -1, 0},    {0, -1, 1, -1, 0}, {0, -1, 1, 0, 0}};[o]{{1, -1, 1, 0, 0}, {0, -1, 1, 0, 0}, {0, -1, 1, -1, 0}, {1, -1, 1, -1, 0},    {1, -1, 0, 0, 0}, {0, -1, 0, 0, 0}, {1, -1, 1, 0, 0}, {1, -1, 1, -1, 0},    {0, -1, 1, -1, 0}, {0, -1, 1, 0, 0}}:[font = input; preserveAspect; startGroup]A[[2]]:[font = output; output; inactive; preserveAspect; endGroup]{{1, 5}, {5, 6}, {6, 2}, {2, 7}, {7, 8}, {8, 3}, {4, 9}, {9, 10}, {10, 1}};[o]{{1, 5}, {5, 6}, {6, 2}, {2, 7}, {7, 8}, {8, 3}, {4, 9}, {9, 10}, {10, 1}}:[font = input; preserveAspect; startGroup]A[[3]]:[font = output; output; inactive; preserveAspect; endGroup]{{1, 2, 3, 4}, {2, 1, 5, 6}, {3, 2, 7, 8}, {1, 4, 9, 10}};[o]{{1, 2, 3, 4}, {2, 1, 5, 6}, {3, 2, 7, 8}, {1, 4, 9, 10}}:[font = input; preserveAspect; startGroup]WalkAround[A]:[font = output; output; inactive; preserveAspect; endGroup; endGroup]{{{1, -1, 1, 0, 0}, {0, -1, 1, 0, 0}, {0, -1, 1, -1, 0}, {1, -1, 1, -1, 0},     {1, -1, 0, 0, 0}, {0, -1, 0, 0, 0}, {1, -1, 1, 0, 0}, {1, -1, 1, -1, 0},     {0, -1, 1, -1, 0}, {0, -1, 1, 0, 0}, {1, 0, 1, 0, 0}, {1, 0, 0, 0, 0},     {1, -1, 0, -1, 0}, {0, -1, 0, -1, 0}, {0, -1, 0, 0, 1}, {0, -1, 1, 0, 1},     {1, -1, 1, 0, 1}, {1, 0, 1, 0, 0}, {1, 0, 1, -1, 0}, {1, -1, 0, -1, 0},     {0, -1, 0, -1, 0}, {0, -1, 0, -1, 0}, {0, -1, 0, 0, 0}, {0, -1, 1, 0, 1},     {1, -1, 1, 0, 1}}, {{1, 11}, {11, 12}, {12, 5}, {5, 13}, {13, 14}, {14, 6},     {6, 15}, {15, 16}, {16, 17}, {17, 7}, {7, 18}, {18, 19}, {19, 8}, {8, 20},     {20, 21}, {21, 22}, {22, 23}, {23, 10}, {10, 24}, {24, 25}, {25, 1}},    {{1, 2, 3, 4}, {2, 1, 5, 6}, {3, 2, 7, 8}, {1, 4, 9, 10}, {5, 1, 11, 12},     {6, 5, 13, 14}, {2, 6, 15, 16}, {7, 2, 16, 17}, {8, 7, 18, 19}, {3, 8, 20, 21},     {9, 4, 21, 22}, {10, 9, 22, 23}, {1, 10, 24, 25}}};[o]{{{1, -1, 1, 0, 0}, {0, -1, 1, 0, 0}, {0, -1, 1, -1, 0}, {1, -1, 1, -1, 0},     {1, -1, 0, 0, 0}, {0, -1, 0, 0, 0}, {1, -1, 1, 0, 0}, {1, -1, 1, -1, 0},     {0, -1, 1, -1, 0}, {0, -1, 1, 0, 0}, {1, 0, 1, 0, 0}, {1, 0, 0, 0, 0},     {1, -1, 0, -1, 0}, {0, -1, 0, -1, 0}, {0, -1, 0, 0, 1}, {0, -1, 1, 0, 1},     {1, -1, 1, 0, 1}, {1, 0, 1, 0, 0}, {1, 0, 1, -1, 0}, {1, -1, 0, -1, 0},     {0, -1, 0, -1, 0}, {0, -1, 0, -1, 0}, {0, -1, 0, 0, 0}, {0, -1, 1, 0, 1},     {1, -1, 1, 0, 1}}, {{1, 11}, {11, 12}, {12, 5}, {5, 13}, {13, 14}, {14, 6},     {6, 15}, {15, 16}, {16, 17}, {17, 7}, {7, 18}, {18, 19}, {19, 8}, {8, 20},     {20, 21}, {21, 22}, {22, 23}, {23, 10}, {10, 24}, {24, 25}, {25, 1}},    {{1, 2, 3, 4}, {2, 1, 5, 6}, {3, 2, 7, 8}, {1, 4, 9, 10}, {5, 1, 11, 12},     {6, 5, 13, 14}, {2, 6, 15, 16}, {7, 2, 16, 17}, {8, 7, 18, 19}, {3, 8, 20, 21},     {9, 4, 21, 22}, {10, 9, 22, 23}, {1, 10, 24, 25}}}:[font = input; preserveAspect; startGroup]ExpandPatch[{initvertices,initboundary,inittiles},2]:[font = output; output; inactive; preserveAspect; endGroup]{{{1, -1, 1, 0, 0}, {0, -1, 1, 0, 0}, {0, -1, 1, -1, 0}, {1, -1, 1, -1, 0},     {1, 0, 1, 0, 0}, {0, 0, 1, 0, 0}, {0, -1, 1, 0, 1}, {0, -1, 1, -1, 1},     {0, -1, 0, -1, 0}, {1, -1, 0, -1, 0}, {1, 0, 1, -1, 0}, {1, 0, 1, 0, 0},     {1, -1, 1, -1, 0}, {1, 0, 1, -1, 0}, {1, 0, 2, 0, 0}, {0, 0, 2, 0, 0},     {0, 0, 1, 0, 1}, {0, -1, 1, 0, 1}, {-1, -1, 1, 0, 1}, {-1, -1, 1, -1, 1},     {0, -1, 0, -1, 1}, {0, -1, 0, -1, 0}, {0, -1, 0, -2, 0}, {1, -1, 0, -2, 0},     {1, -1, 0, -1, -1}, {1, -1, 1, -1, -1}, {1, -1, 0, -1, 0}, {1, 0, 0, -1, 0},     {1, 1, 1, -1, 0}, {1, 1, 1, 0, 0}, {1, 0, 1, 0, 1}, {1, -1, 1, 0, 1}},    {{1, 13}, {13, 14}, {14, 5}, {5, 15}, {15, 16}, {16, 6}, {6, 17}, {17, 18}, {18, 2},     {7, 19}, {19, 20}, {20, 8}, {8, 21}, {21, 22}, {22, 3}, {9, 23}, {23, 24}, {24, 10},     {10, 25}, {25, 26}, {26, 4}, {4, 27}, {27, 28}, {28, 11}, {11, 29}, {29, 30},     {30, 12}, {12, 31}, {31, 32}, {32, 1}},    {{1, 2, 3, 4}, {2, 1, 5, 6}, {3, 2, 7, 8}, {4, 3, 9, 10}, {1, 4, 11, 12},     {5, 1, 13, 14}, {6, 5, 15, 16}, {2, 6, 17, 18}, {8, 7, 19, 20}, {3, 8, 21, 22},     {10, 9, 23, 24}, {4, 10, 25, 26}, {11, 4, 27, 28}, {12, 11, 29, 30}, {1, 12, 31, 32}}    };[o]{{{1, -1, 1, 0, 0}, {0, -1, 1, 0, 0}, {0, -1, 1, -1, 0}, {1, -1, 1, -1, 0},     {1, 0, 1, 0, 0}, {0, 0, 1, 0, 0}, {0, -1, 1, 0, 1}, {0, -1, 1, -1, 1},     {0, -1, 0, -1, 0}, {1, -1, 0, -1, 0}, {1, 0, 1, -1, 0}, {1, 0, 1, 0, 0},     {1, -1, 1, -1, 0}, {1, 0, 1, -1, 0}, {1, 0, 2, 0, 0}, {0, 0, 2, 0, 0},     {0, 0, 1, 0, 1}, {0, -1, 1, 0, 1}, {-1, -1, 1, 0, 1}, {-1, -1, 1, -1, 1},     {0, -1, 0, -1, 1}, {0, -1, 0, -1, 0}, {0, -1, 0, -2, 0}, {1, -1, 0, -2, 0},     {1, -1, 0, -1, -1}, {1, -1, 1, -1, -1}, {1, -1, 0, -1, 0}, {1, 0, 0, -1, 0},     {1, 1, 1, -1, 0}, {1, 1, 1, 0, 0}, {1, 0, 1, 0, 1}, {1, -1, 1, 0, 1}},    {{1, 13}, {13, 14}, {14, 5}, {5, 15}, {15, 16}, {16, 6}, {6, 17}, {17, 18}, {18, 2},     {7, 19}, {19, 20}, {20, 8}, {8, 21}, {21, 22}, {22, 3}, {9, 23}, {23, 24}, {24, 10},     {10, 25}, {25, 26}, {26, 4}, {4, 27}, {27, 28}, {28, 11}, {11, 29}, {29, 30},     {30, 12}, {12, 31}, {31, 32}, {32, 1}},    {{1, 2, 3, 4}, {2, 1, 5, 6}, {3, 2, 7, 8}, {4, 3, 9, 10}, {1, 4, 11, 12},     {5, 1, 13, 14}, {6, 5, 15, 16}, {2, 6, 17, 18}, {8, 7, 19, 20}, {3, 8, 21, 22},     {10, 9, 23, 24}, {4, 10, 25, 26}, {11, 4, 27, 28}, {12, 11, 29, 30}, {1, 12, 31, 32}}    }:[font = input; preserveAspect; startGroup]Foo=ExpandPatch[{initvertices,initboundary,inittiles},6];:[font = input; preserveAspect]vertices=Foo[[1]];tiles= Foo[[3]];:[font = input; preserveAspect]OOGLForm[vtxlist_, tilelist_,file_]:=(OpenWrite[file];     WriteString [file,"NOFF "]; (*Write[file,{} ];*)    WriteString [file,"5 " ];(*Write[file,{} ];*)     WriteString [file,TableForm[{ {Length[vtxlist] ,  Length[tilelist], 1 }}  ]];     WriteString [file," " ];(*Write[file,{} ];*)     WriteString [file,TableForm[ vtxlist , TableSpacing -> {0,1}]];     WriteString [file," "];(*Write[file,{} ];*)     WriteString[file,TableForm[ Map [Prepend [#, Length[#]] &, tilelist],             TableSpacing -> {0,1}]]; Close[file]     )          :[font = input; preserveAspect; startGroup] OOGLForm[vertices, tiles,"tile.soff"]:[font = output; output; inactive; preserveAspect; endGroup; endGroup]"tile.soff";[o]tile.soff:[font = input; preserveAspect]Write["tiles.off",OOGLForm[vertices, tiles] ];:[font = input; preserveAspect; startGroup]Length[vertices]:[font = output; output; inactive; preserveAspect; endGroup]870;[o]870^*)