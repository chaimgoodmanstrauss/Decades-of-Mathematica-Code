(*^::[	Information =	"This is a Mathematica Notebook file.  It contains ASCII text, and can be	transferred by email, ftp, or other text-file transfer utility.  It should	be read or edited using a copy of Mathematica or MathReader.  If you 	received this as email, use your mail application or copy/paste to save 	everything from the line containing (*^ down to the line containing ^*)	into a plain text file.  On some systems you may have to give the file a 	name ending with ".ma" to allow Mathematica to recognize it as a Notebook.	The line below identifies what version of Mathematica created this file,	but it can be opened using any other version as well.";	FrontEndVersion = "Macintosh Mathematica Notebook Front End Version 2.2";	MacintoshStandardFontEncoding; 		paletteColors = 128; automaticGrouping; currentKernel; ]:[font = text; inactive; preserveAspect]The Snub Cube:[font = input; preserveAspect]dd[x_,y_]:=(x-y).(x-y):[font = input; preserveAspect; startGroup]vertsnub= {a,b,1} /. (Solve[{   dd[{a,b,1},{1,-b,a}] ==           dd[{a,b,1},{-b,a,1}] ==          dd[{a,b,1},{1,a,b}]  } ,{a,b}] //N )[[1]]:[font = output; output; inactive; preserveAspect; endGroup];[o]{0.543689, 0.295598, 1}:[font = input; preserveAspect]:[font = subsection; inactive; preserveAspect; startGroup]Polyhedral groups:[font = text; inactive; preserveAspect]These    are generators   for all the platonic symmetries:[font = input; preserveAspect]Invert[dodont_Integer (*Mod 2*)][vect_List]:= 		vect*{{1,1,1},{-1,-1,-1}}[[dodont]] InvertThrough[Axis_][dodont_Integer (*Mod 2*)][vect_List]:=  vect*{{1,1,1},RotateRight[{1,-1,-1},Axis]   }[[dodont]] Rot3[pinth_Integer (*Mod 3*)(*cwise about   (1,1,1)*)][vect_List]:=		RotateRight[vect,pinth-1]:[font = input; preserveAspect; startGroup]InvertThrough[3][2][{a,b,c}]:[font = output; output; inactive; preserveAspect; endGroup];[o]{a, -b, -c}:[font = input; preserveAspect]rots4=Table[      MatrixPower[{{0,1,0},{-1,0,0},{0,0,1}},k],{k,0,3}];   :[font = input; preserveAspect; startGroup]Rot4[pinth_Integer][vect_List]:= rots4[[pinth]].vect				Ident[vect_]:=vect(* given a  face and a generator  mmap of order order, 	fimages givesa list of all the images of the face *)fimages[mmap_,order_,face_]:=    Chop[#,10^-13]& @ 	Table[		mmap[k][face[[j]]],			{k,1,order},{j,1,Length[face]}] :[font = message; inactive; preserveAspect; endGroup]General::spell1:    Possible spelling error: new symbol name "Ident"     is similar to existing symbol "Indent".:[font = subsubsection; inactive; preserveAspect; startGroup] the Snub Cube::[font = input; preserveAspect]:[font = text; inactive; preserveAspect]:[font = input; preserveAspect; startGroup]SquareFace = Join @@ 	(fimages[Rot4,4,{vertsnub}]):[font = output; output; inactive; preserveAspect; endGroup];[o]{{0.543689, 0.295598, 1.}, {0.295598, -0.543689, 1.},    {-0.543689, -0.295598, 1.}, {-0.295598, 0.543689, 1.}}:[font = input; preserveAspect]SquareFaces=  		Join @@ (  fimages[Rot3,3,#]& /@ 		fimages[InvertThrough[3],2,SquareFace] );:[font = input; preserveAspect]TriFace1 =  Join @@ 	(fimages[Rot3,3,{vertsnub}]);TriFaces1=  Join @@ (  fimages[Rot4,4,#]& /@ 		fimages[InvertThrough[3],2,TriFace1] ); :[font = input; preserveAspect; startGroup]TriFace2 = {Rot4[2][vertsnub], Rot4[1][vertsnub], Rot3[2][Rot4[4][vertsnub]]}TriFaces2=             		Join @@ (  fimages[Rot3,3,#]& /@ (Join @@ 		(fimages[InvertThrough[3],2,#]& /@		fimages[Rot4,4,TriFace2] )));:[font = output; output; inactive; preserveAspect; endGroup];[o]{{0.295598, -0.543689, 1.}, {0.543689, 0.295598, 1.},    {1., -0.295598, 0.543689}}:[font = input; preserveAspect]SnubCube=  	Join @@ {{GrayLevel[.9]},				 	Polygon /@ SquareFaces, 				 	{GrayLevel[.40]},					Polygon /@TriFaces1, 					{GrayLevel[.60]},					Polygon /@TriFaces2};:[font = input; preserveAspect]:[font = text; inactive; preserveAspect]:[font = input; preserveAspect; startGroup]Show[Graphics3D[SnubCube] ,Lighting->False,Boxed->False] :[font = postscript; PostScript; formatAsPostScript; output; inactive; preserveAspect; pictureLeft = 34; pictureWidth = 265; pictureHeight = 286]:[font = output; output; inactive; preserveAspect; endGroup];[o]-Graphics3D-:[font = input; preserveAspect]:[font = input; preserveAspect; endGroup; endGroup]:[font = subsection; inactive; preserveAspect; startGroup]Stellations of the snub cube:[font = text; inactive; preserveAspect]Planes are given by point and normal  { {a,b,c}, {n,m,l} }Eqn is {{x,y,z}-{a,b,c}}.{n,m,l}=0:[font = input; preserveAspect]eq[plane_]:=({x,y,z}-plane[[1]]) . plane[[2]]Intersect[ plane1_, plane2_]:= Solve[{ eq[plane1]==0, 0 == eq[plane2]} , {x,y,z}]SquarePlane= {{0,0,1},{0,0,1}};SquarePlanes= Join @@ (  fimages[Rot3,3,#]& /@ 		fimages[InvertThrough[3],2,SquarePlane] );TriPlane1 = { vertsnub,{1,1,1} }TriPlanes1= Join @@ (  fimages[Rot4,4,#]& /@ 		fimages[InvertThrough[3],2,TriPlane1] )TriPlane2 = {vertsnub, Plus @@ TriFace2}TriPlanes2=             		Join @@ (  fimages[Rot3,3,#]& /@ (Join @@ 		(fimages[InvertThrough[3],2,#]& /@		fimages[Rot4,4,TriPlane2] )));SnubPlanes = Join [ SquarePlanes, TriPlanes1, TriPlanes2]SquarePattern= Join @@ (Select[Intersect[SnubPlanes[[1]], # ]& /@ Drop[SnubPlanes,1]   // Chop [#,10^-5]&, #!={}&]);SqPat=(({x,y} /. #)& /@ SquarePattern) /. {x->y};:[font = input; preserveAspect]ParametricPlot[#, {y,-20,20},PlotRange->{{-10,10},{-10,10}},AspectRatio->Automatic,PlotStyle->{AbsoluteThickness[.05]}]& /@ SqPat;:[font = input; preserveAspect; startGroup]Show[%226]:[font = postscript; PostScript; formatAsPostScript; output; inactive; preserveAspect; pictureLeft = 34; pictureTop = 1; pictureWidth = 692; pictureHeight = 692]:[font = output; output; inactive; preserveAspect; endGroup; endGroup];[o]-Graphics-^*)