(*^::[	Information =	"This is a Mathematica Notebook file.  It contains ASCII text, and can be	transferred by email, ftp, or other text-file transfer utility.  It should	be read or edited using a copy of Mathematica or MathReader.  If you 	received this as email, use your mail application or copy/paste to save 	everything from the line containing (*^ down to the line containing ^*)	into a plain text file.  On some systems you may have to give the file a 	name ending with ".ma" to allow Mathematica to recognize it as a Notebook.	The line below identifies what version of Mathematica created this file,	but it can be opened using any other version as well.";	FrontEndVersion = "Macintosh Mathematica Notebook Front End Version 2.2";	MacintoshStandardFontEncoding; 		fontset = title, inactive, noPageBreakBelow, nohscroll, preserveAspect, groupLikeTitle, center, M7, bold, e8,  24, "Times"; 	fontset = subtitle, inactive, noPageBreakBelow, nohscroll, preserveAspect, groupLikeTitle, center, M7, bold, e6,  18, "Times"; 	fontset = subsubtitle, inactive, noPageBreakBelow, nohscroll, preserveAspect, groupLikeTitle, center, M7, italic, e6,  14, "Times"; 	fontset = section, inactive, noPageBreakBelow, nohscroll, preserveAspect, groupLikeSection, grayBox, M22, bold, a20,  18, "Times"; 	fontset = subsection, inactive, noPageBreakBelow, nohscroll, preserveAspect, groupLikeSection, blackBox, M19, bold, a15,  14, "Times"; 	fontset = subsubsection, inactive, noPageBreakBelow, nohscroll, preserveAspect, groupLikeSection, whiteBox, M18, bold, a12,  12, "Times"; 	fontset = text, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, "Times"; 	fontset = smalltext, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  10, "Times"; 	fontset = input, noPageBreakInGroup, nowordwrap, preserveAspect, groupLikeInput, M42, N23, bold, L-5,  12, "Courier"; 	fontset = output, output, inactive, noPageBreakInGroup, nowordwrap, preserveAspect, groupLikeOutput, M42, N23, L-5,  12, "Courier"; 	fontset = message, inactive, noPageBreakInGroup, nowordwrap, preserveAspect, groupLikeOutput, M42, N23, R65535, L-5,  12, "Courier"; 	fontset = print, inactive, noPageBreakInGroup, nowordwrap, preserveAspect, groupLikeOutput, M42, N23, L-5,  12, "Courier"; 	fontset = info, inactive, noPageBreakInGroup, nowordwrap, preserveAspect, groupLikeOutput, M42, N23, B65535, L-5,  12, "Courier"; 	fontset = postscript, PostScript, formatAsPostScript, output, inactive, noPageBreakInGroup, nowordwrap, preserveAspect, groupLikeGraphics, M7, l34, w282, h287,  12, "Courier"; 	fontset = name, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7, italic,  10, "Geneva"; 	fontset = header, inactive, noKeepOnOnePage, preserveAspect, M7,  12, "Times"; 	fontset = leftheader, inactive, L2,  12, "Times"; 	fontset = footer, inactive, noKeepOnOnePage, preserveAspect, center, M7,  12, "Times"; 	fontset = leftfooter, inactive, L2,  12, "Times"; 	fontset = help, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  10, "Times"; 	fontset = clipboard, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, "Times"; 	fontset = completions, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, "Times"; 	fontset = special1, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, "Times"; 	fontset = special2, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, "Times"; 	fontset = special3, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, "Times"; 	fontset = special4, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, "Times"; 	fontset = special5, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, "Times"; 	paletteColors = 128; automaticGrouping; currentKernel; ]:[font = text; inactive; preserveAspect]Avoid verticles, for now, and assume no three colinear vertices, and assume three vertices total:[font = input; initialization; preserveAspect]*)Triangle[p1_,p2_,p3_]:=N[edges[{p1,p2,p3}]](*:[font = input; initialization; preserveAspect; startGroup]*)x0={1,2}Billiard=Triangle[{1,2},{2,3},{3,4}]max=30(*:[font = output; output; inactive; preserveAspect]{1, 2};[o]{1, 2}:[font = output; output; inactive; preserveAspect]edges[{{1., 2.}, {2., 3.}, {3., 4.}}];[o]edges[{{1., 2.}, {2., 3.}, {3., 4.}}]:[font = message; inactive; preserveAspect]General::spell1:    Possible spelling error: new symbol name "max"     is similar to existing symbol "Max".:[font = output; output; inactive; preserveAspect; endGroup]30;[o]30:[font = text; inactive; preserveAspect]Given a polygon (and all the extra data with it)  a point, and ASSUMING same cyclic motionas order of vertices, find the vertex of poly through which to move.Whereis1 returns a list of {T/F,T/F,T/F} where T in spot n means point x is to the SAME side ofline n as the triangle.  If x is inside polygon, will return all trues.  Otherwise, a cyclic permutation of something like{T,T,T,F,F,F,F}. The position of the LAST false is the index of the vertex tomove through.:[font = input; initialization; preserveAspect]*)WhereIs1[x_,triang_]:=Table[((x[[1]]-triang[[i+1]][[4]])^2+x[[2]]^2						<triang[[i+1]][[8]])===triang[[i+1]][[5]]	,{i,1,3}]  (*:[font = text; inactive; initialization; preserveAspect]But actually WhereIs1 is inefficient, since it checks every T/F. Instead, check first position. If true, go backwards until F encountered; if false, go forwards until T encountered.  Where is gives an integer.:[font = input; initialization; preserveAspect]*)tester[j_]:=((x[[1]]-triang[[i+1]][[4]])^2+x[[2]]^2					<triang[[i+1]][[8]])===triang[[i+1]][[5]](*:[font = input; initialization; preserveAspect]*)WhereIs[x_,triang_]:= Block[{i,mm=triang[[1]]},		If[ ((x[[1]]-triang[[2,4]])^2+x[[2]]^2					<triang[[2,8]])===triang[[2,5]],						i=mm; While[((x[[1]]-triang[[i+1,4]])^2+x[[2]]^2					<triang[[i+1,8]])===triang[[i+1,5]] && i>=2, i--]; 						If[i===mm,1,If[i>1,i+1,"inside"]],						i=1;  While[(!(((x[[1]]-triang[[i+1]][[4]])^2+x[[2]]^2					<triang[[i+1,8]])===triang[[i+1,5]])) && i<mm, i++]; i,						{xxxx} ]](*:[font = input; initialization; preserveAspect]:[font = input; initialization; preserveAspect; startGroup]*)npt[y_]:=	NewPoint[{y,trian[[WhereIs[y,trian] +1,1]]}]Iterate[triang_,x_,max_]:=Block[{trian=triang},NestList[npt, x, max]](*:[font = message; inactive; preserveAspect; endGroup]General::spell1:    Possible spelling error: new symbol name "trian"     is similar to existing symbol "triang".:[font = input; initialization; preserveAspect]*)PlotIterates[triang_,x_,max_,range_]:= Show[Graphics[	{AbsolutePointSize[.25],Evaluate [	Point /@ Iterate[triang,x,max] ]},Axes->True,		AxesStyle->AbsoluteThickness[.01],PlotRange->range],ParametricPlot[Evaluate[PlotLines[triang]],{theta,0,1},	PlotStyle->AbsoluteThickness[.01]] ](*:[font = input; preserveAspect]:[font = input; preserveAspect]b=N[edges[{{10,20},{6,25},{12,21.5}}]]:[font = input; preserveAspect]PlotIterates[b,{9.99,19.9},2500,{{-100,100},{0,100}}]^*)