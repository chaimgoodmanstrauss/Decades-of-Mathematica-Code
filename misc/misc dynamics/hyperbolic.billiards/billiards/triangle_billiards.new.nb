(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='%s' *)
(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       131,          6]
NotebookDataLength[      5301,        210]
NotebookOptionsPosition[      3854,        155]
NotebookOutlinePosition[      4402,        180]
CellTagsIndexPosition[      4359,        177]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{


Cell["\<\
Avoid verticles, for now, and assume no three colinear vertices, and assume \
three vertices total\
\>", "Text"],

Cell["Triangle[p1_,p2_,p3_]:=N[edges[{p1,p2,p3}]]", "Input",
 InitializationCell->True],

Cell[CellGroupData[{Cell["\<\
x0={1,2}
Billiard=Triangle[{1,2},{2,3},{3,4}]
max=30\
\>", "Input",
 InitializationCell->True],

Cell[OutputFormData["\<\
{1, 2}\
\>", "\<\
{1, 2}\
\>"], "Output"],

Cell[OutputFormData["\<\
edges[{{1., 2.}, {2., 3.}, {3., 4.}}]\
\>", "\<\
edges[{{1., 2.}, {2., 3.}, {3., 4.}}]\
\>"], "Output"],

Cell["\<\
General::spell1: 
   Possible spelling error: new symbol name \"max\"
     is similar to existing symbol \"Max\".\
\>", "Message"],

Cell[OutputFormData["\<\
30\
\>", "\<\
30\
\>"], "Output"]}, Open]],

Cell["\<\
Given a polygon (and all the extra data with it)  a point, and ASSUMING same \
cyclic motion
as order of vertices, find the vertex of poly through which to move.

Whereis1 returns a list of {T/F,T/F,T/F} where T in spot n means point x is \
to the SAME side of
line n as the triangle.  If x is inside polygon, will return all trues.  \
Otherwise, a cyclic permutation of something like{T,T,T,F,F,F,F}. The \
position of the LAST false is the index of the vertex to
move through.\
\>", "Text"],

Cell["\<\
WhereIs1[x_,triang_]:=Table[((x[[1]]-triang[[i+1]][[4]])^2+x[[2]]^2
\t\t\t\t\t\t<triang[[i+1]][[8]])===triang[[i+1]][[5]]
\t,{i,1,3}]  

\
\>", "Input",
 InitializationCell->True],

Cell["\<\
But actually WhereIs1 is inefficient, since it checks every T/F. Instead, \
check first position. If true, go backwards until F encountered; if false, go \
forwards until T encountered.  Where is gives an integer.\
\>", "Text",
 InitializationCell->True],

Cell["\<\
tester[j_]:=((x[[1]]-triang[[i+1]][[4]])^2+x[[2]]^2
\t\t\t\t\t<triang[[i+1]][[8]])===triang[[i+1]][[5]]\
\>", "Input",
 InitializationCell->True],

Cell["\<\
WhereIs[x_,triang_]:= Block[{i,mm=triang[[1]]},
\t\tIf[ ((x[[1]]-triang[[2,4]])^2+x[[2]]^2
\t\t\t\t\t<triang[[2,8]])===triang[[2,5]],
\t\t\t
\t\t\ti=mm; While[((x[[1]]-triang[[i+1,4]])^2+x[[2]]^2
\t\t\t\t\t<triang[[i+1,8]])===triang[[i+1,5]] && i>=2, i--]; 
\t\t\t\t\t\tIf[i===mm,1,If[i>1,i+1,\"inside\"]],
\t\t\t
\t\t\ti=1;  While[(!(((x[[1]]-triang[[i+1]][[4]])^2+x[[2]]^2
\t\t\t\t\t<triang[[i+1,8]])===triang[[i+1,5]])) && i<mm, i++]; i,
\t\t\t
\t\t\t{xxxx} ]]

\
\>", "Input",
 InitializationCell->True],

Cell["", "Input",
 InitializationCell->True],

Cell[CellGroupData[{Cell["\<\
npt[y_]:=
\tNewPoint[{y,trian[[WhereIs[y,trian] +1,1]]}]

Iterate[triang_,x_,max_]:=Block[{trian=triang}
,
NestList[npt, x, max]]\
\>", "Input",
 InitializationCell->True],

Cell["\<\
General::spell1: 
   Possible spelling error: new symbol name \"trian\"
     is similar to existing symbol \"triang\".\
\>", "Message"]}, Open]],

Cell["\<\
PlotIterates[triang_,x_,max_,range_]:= Show[Graphics[
\t{AbsolutePointSize[.25],Evaluate [
\tPoint /@ Iterate[triang,x,max] ]},Axes->True,
\t\tAxesStyle->AbsoluteThickness[.01],PlotRange->range],
ParametricPlot[Evaluate[PlotLines[triang]],{theta,0,1},
\tPlotStyle->AbsoluteThickness[.01]] ]\
\>", "Input",
 InitializationCell->True],

Cell["\<\



\
\>", "Input"],

Cell["\<\
b=N[edges[{{10,20},{6,25},{12,21.5}}]]
\
\>", "Input"],

Cell["PlotIterates[b,{9.99,19.9},2500,{{-100,100},{0,100}}]", "Input"]
},
AutoGeneratedPackage->Automatic,
WindowToolbars->{},
CellGrouping->Manual,
WindowSize->{740, 867},
WindowMargins->{{108, Automatic}, {21, Automatic}},
ShowCellLabel->True,
ShowCellTags->False,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (February 23, \
2011)",
StyleDefinitions->"Default.nb"
]

(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[533, 21, 122, 3, 70, "Text"],
Cell[658, 26, 87, 1, 70, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[768, 29, 104, 5, 70, "Input",
 InitializationCell->True],
Cell[875, 36, 66, 4, 70, "Output"],
Cell[944, 42, 128, 4, 70, "Output"],
Cell[1075, 48, 140, 4, 70, "Message"],
Cell[1218, 54, 58, 4, 70, "Output"]
}, Open  ]],
Cell[1288, 60, 502, 11, 70, "Text"],
Cell[1793, 73, 189, 7, 70, "Input",
 InitializationCell->True],
Cell[1985, 82, 264, 5, 70, "Text",
 InitializationCell->True],
Cell[2252, 89, 155, 4, 70, "Input",
 InitializationCell->True],
Cell[2410, 95, 517, 16, 70, "Input",
 InitializationCell->True],
Cell[2930, 113, 44, 1, 70, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2997, 116, 181, 8, 70, "Input",
 InitializationCell->True],
Cell[3181, 126, 145, 4, 70, "Message"]
}, Open  ]],
Cell[3338, 132, 342, 8, 70, "Input",
 InitializationCell->True],
Cell[3683, 142, 28, 5, 70, "Input"],
Cell[3714, 149, 64, 3, 70, "Input"],
Cell[3781, 154, 70, 0, 70, "Input"]
}
]
*)
