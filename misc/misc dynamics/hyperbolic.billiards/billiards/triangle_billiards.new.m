(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)

Triangle[p1_,p2_,p3_]:=N[edges[{p1,p2,p3}]]

x0={1,2}
Billiard=Triangle[{1,2},{2,3},{3,4}]
max=30

WhereIs1[x_,triang_]:=Table[((x[[1]]-triang[[i+1]][[4]])^2+x[[2]]^2
						<triang[[i+1]][[8]])===triang[[i+1]][[5]]
	,{i,1,3}]  



tester[j_]:=((x[[1]]-triang[[i+1]][[4]])^2+x[[2]]^2
					<triang[[i+1]][[8]])===triang[[i+1]][[5]]

WhereIs[x_,triang_]:= Block[{i,mm=triang[[1]]},
		If[ ((x[[1]]-triang[[2,4]])^2+x[[2]]^2
					<triang[[2,8]])===triang[[2,5]],
			
			i=mm; While[((x[[1]]-triang[[i+1,4]])^2+x[[2]]^2
					<triang[[i+1,8]])===triang[[i+1,5]] && i>=2, i--]; 
						If[i===mm,1,If[i>1,i+1,"inside"]],
			
			i=1;  While[(!(((x[[1]]-triang[[i+1]][[4]])^2+x[[2]]^2
					<triang[[i+1,8]])===triang[[i+1,5]])) && i<mm, i++]; i,
			
			{xxxx} ]]





npt[y_]:=
	NewPoint[{y,trian[[WhereIs[y,trian] +1,1]]}]

Iterate[triang_,x_,max_]:=Block[{trian=triang}
,
NestList[npt, x, max]]

PlotIterates[triang_,x_,max_,range_]:= Show[Graphics[
	{AbsolutePointSize[.25],Evaluate [
	Point /@ Iterate[triang,x,max] ]},Axes->True,
		AxesStyle->AbsoluteThickness[.01],PlotRange->range],
ParametricPlot[Evaluate[PlotLines[triang]],{theta,0,1},
	PlotStyle->AbsoluteThickness[.01]] ]

