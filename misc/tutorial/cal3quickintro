(*^::[	Information =	"This is a Mathematica Notebook file.  It contains ASCII text, and can be	transferred by email, ftp, or other text-file transfer utility.  It should	be read or edited using a copy of Mathematica or MathReader.  If you 	received this as email, use your mail application or copy/paste to save 	everything from the line containing (*^ down to the line containing ^*)	into a plain text file.  On some systems you may have to give the file a 	name ending with ".ma" to allow Mathematica to recognize it as a Notebook.	The line below identifies what version of Mathematica created this file,	but it can be opened using any other version as well.";	FrontEndVersion = "Macintosh Mathematica Notebook Front End Version 2.2";	MacintoshStandardFontEncoding; 		fontset = title, inactive, noPageBreakBelow, nohscroll, preserveAspect, groupLikeTitle, center, M7, bold, e8,  24, "Times"; 	fontset = subtitle, inactive, noPageBreakBelow, nohscroll, preserveAspect, groupLikeTitle, center, M7, bold, e6,  18, "Times"; 	fontset = subsubtitle, inactive, noPageBreakBelow, nohscroll, preserveAspect, groupLikeTitle, center, M7, italic, e6,  14, "Times"; 	fontset = section, inactive, noPageBreakBelow, nohscroll, preserveAspect, groupLikeSection, grayBox, M22, bold, a20,  18, "Times"; 	fontset = subsection, inactive, noPageBreakBelow, nohscroll, preserveAspect, groupLikeSection, blackBox, M19, bold, a15,  14, "Times"; 	fontset = subsubsection, inactive, noPageBreakBelow, nohscroll, preserveAspect, groupLikeSection, whiteBox, M18, bold, a12,  12, "Times"; 	fontset = text, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, "Times"; 	fontset = smalltext, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  10, "Times"; 	fontset = input, noPageBreakInGroup, nowordwrap, preserveAspect, groupLikeInput, M42, N23, bold, L-5,  12, "Courier"; 	fontset = output, output, inactive, noPageBreakInGroup, nowordwrap, preserveAspect, groupLikeOutput, M42, N23, L-5,  12, "Courier"; 	fontset = message, inactive, noPageBreakInGroup, nowordwrap, preserveAspect, groupLikeOutput, M42, N23, R65535, L-5,  12, "Courier"; 	fontset = print, inactive, noPageBreakInGroup, nowordwrap, preserveAspect, groupLikeOutput, M42, N23, L-5,  12, "Courier"; 	fontset = info, inactive, noPageBreakInGroup, nowordwrap, preserveAspect, groupLikeOutput, M42, N23, B65535, L-5,  12, "Courier"; 	fontset = postscript, PostScript, formatAsPostScript, output, inactive, noPageBreakInGroup, nowordwrap, preserveAspect, groupLikeGraphics, M7, l34, w282, h287,  12, "Courier"; 	fontset = name, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7, italic,  10, "Geneva"; 	fontset = header, inactive, noKeepOnOnePage, preserveAspect, M7,  12, "Times"; 	fontset = leftheader, inactive, L2,  12, "Times"; 	fontset = footer, inactive, noKeepOnOnePage, preserveAspect, center, M7,  12, "Times"; 	fontset = leftfooter, inactive, L2,  12, "Times"; 	fontset = help, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  10, "Times"; 	fontset = clipboard, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, "Times"; 	fontset = completions, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, "Times"; 	fontset = special1, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, "Times"; 	fontset = special2, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, "Times"; 	fontset = special3, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, "Times"; 	fontset = special4, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, "Times"; 	fontset = special5, inactive, nohscroll, noKeepOnOnePage, preserveAspect, M7,  12, "Times"; 	paletteColors = 128; automaticGrouping; currentKernel; ]:[font = title; inactive; preserveAspect; startGroup]Quick Introto Mathematica;[s]3:0,0;16,1;27,0;29,-1;2:2,25,18,Times,1,24,0,0,0;1,25,18,Times,3,24,0,0,0;:[font = text; inactive; preserveAspect]This introduction will introduce you to a bare minimum of the features of MathematicaClick <enter> to evaluate the input cells. To get you started, in the first section:good things to change around to see what happens are written in blueless important parts of the commands have been written in gray.;[s]14:0,0;74,1;85,0;117,2;132,1;173,2;174,6;195,0;238,5;242,2;243,6;263,0;301,4;305,3;308,-1;7:4,14,10,Times,0,12,0,0,0;2,14,10,Times,2,12,0,0,0;3,14,10,Courier,1,12,0,0,0;1,14,10,Courier,1,12,58981,58981,58981;1,14,10,Courier,1,12,32767,32767,32767;1,14,10,Courier,1,12,0,0,65535;2,14,10,Times,1,12,0,0,0;:[font = section; inactive; preserveAspect; startGroup]Parametric Equations:[font = input; preserveAspect]ParametricPlot[{t^2,t^3},{t,-1,1},		PlotRange->All];[s]7:0,0;18,2;25,0;30,2;34,0;35,1;53,0;55,-1;3:4,13,10,Courier,1,12,0,0,0;1,13,10,Courier,1,12,32767,32767,32767;2,13,10,Courier,1,12,0,0,65535;:[font = input; preserveAspect](* This gives a description of the way this command works*)  ?ParametricPlot;[s]3:0,0;1,1;63,0;80,-1;2:2,13,10,Courier,1,12,0,0,0;1,13,10,Times,0,12,0,0,0;:[font = input; preserveAspect]Off[ParametricPlot::ppcom]  (* This turns off an irritating error message*)P=12; Q=7;r=.5 Q;ParametricPlot[	(P-Q){Cos[t],Sin[t]} + r Q {Cos[(Q-P)/Q t],Sin[(Q-P)/Q t]},				{t,0, 2 Pi Q /GCD[P-Q,Q]}, AspectRatio->Automatic, Axes->False];[s]13:0,0;8,3;29,0;32,4;79,0;83,1;85,0;90,1;91,0;95,1;97,0;210,2;245,0;247,-1;5:7,13,10,Courier,1,12,0,0,0;3,13,10,Courier,1,12,0,0,65535;1,13,10,Courier,1,12,32767,32767,32767;1,13,10,Courier,0,12,65535,0,0;1,13,10,Times,0,12,0,0,0;:[font = input; preserveAspect]ParametricPlot3D[ {2 Sin[20 t],Cos[20 t],t}, {t,0,2 Pi},  																		Axes->False, Boxed->False, ViewPoint->{3,2,4},																		PlotPoints->500];[s]14:0,0;21,1;44,0;50,1;56,0;79,2;85,1;90,2;99,1;104,2;118,1;123,2;156,1;159,0;161,-1;3:4,13,10,Courier,1,12,0,0,0;6,13,10,Courier,1,12,0,0,65535;4,13,10,Courier,1,12,32767,32767,32767;:[font = input; preserveAspect]ParametricPlot[	 (Sin[10 t] + 1.4){Cos[t],Sin[t]},				{t,0, 2 Pi}, AspectRatio->Automatic, Axes->False];[s]3:0,0;69,1;104,0;106,-1;2:2,13,10,Courier,1,12,0,0,0;1,13,10,Courier,1,12,32767,32767,32767;:[font = text; inactive; preserveAspect]Next we have functions R^2 -> R^3,   i.e. parametric surfaces:;[s]3:0,0;46,1;65,0;67,-1;2:2,14,10,Times,0,12,0,0,0;1,14,10,Times,4,12,0,0,0;:[font = input; preserveAspect]ParametricPlot3D[{Sin[psi] Cos[theta], Sin[psi] Sin[theta], Cos[psi]},							{psi,0,Pi},{theta,0, 2 Pi},  							Axes->False, Boxed->False, ViewPoint->{3,2,4}, 	PlotPoints->{20,30}];[s]16:0,0;18,2;68,0;83,2;87,0;96,2;103,0;115,1;121,2;126,1;135,2;140,1;154,2;159,1;175,2;182,0;184,-1;3:5,13,10,Courier,1,12,0,0,0;4,13,10,Courier,1,12,32767,32767,32767;7,13,10,Courier,1,12,0,0,65535;:[font = input; preserveAspect]ParametricPlot3D[{v Cos[u], v Sin[u], 1/2 Sin[2 u]}, {u,0,2Pi},{v,0,1},	 Axes->False, Boxed->False,  	 ViewPoint->{2.5,.5,2}, 	PlotPoints->{60,5}]	 	 ;[s]10:0,0;18,2;50,0;74,1;102,0;105,1;117,2;125,1;141,2;147,0;156,-1;3:4,13,10,Courier,1,12,0,0,0;3,13,10,Courier,1,12,32767,32767,32767;3,13,10,Courier,1,12,0,0,65535;:[font = text; inactive; preserveAspect; endGroup]:[font = section; inactive; preserveAspect; startGroup]Graphing Functions:[font = input; preserveAspect]Plot3D[  3 E^(-x^2 - y^2), {x,-1,1},{y,-1,1}]:[font = text; inactive; preserveAspect]The Plot3D command tends to distort heights.  Note the difference with: 		:[font = input; preserveAspect]ParametricPlot3D[ {x,y,3 E^(-x^2 - y^2)}, {x,-1,1},{y,-1,1}]:[font = input; preserveAspect]Plot3D[ x y , {x,-1,1},{y,-1,1}, 																PlotPoints->{10,10},																Axes->False,																Boxed->True,																ViewPoint->{0.953, 2.826, 2.000}];[s]9:0,0;50,1;78,0;86,1;108,0;116,1;137,0;145,1;177,0;179,-1;2:5,13,10,Courier,1,12,0,0,0;4,13,10,Courier,1,12,32767,32767,32767;:[font = text; inactive; preserveAspect]Also note there are some real problems trying use plot to make pictures of some kinds of surfaces.   This next command is trying to make  a sphere by plotting 												z(x,y) = 			Sqrt(1-x^2-y^2)   for x^2+y^2 <=1											z(x,y) = 0   otherwise:[font = input; preserveAspect]Plot3D[   If[x^2+y^2 >1, 0, Sqrt[1-x^2-y^2] ], {x,-1,1},{y,-1,1}] :[font = text; inactive; preserveAspect]The next examples illustrate  that where there is a lot of detail in a small space, things can go wrong with plot::[font = input; preserveAspect]Plot[Sin[1/x], {x,-1,1}]:[font = input; preserveAspect; endGroup]Plot3D[ (x y)/(x^2 + y^2), {x,-1,1},{y,-1,1}, 							PlotPoints->{30,30},							ViewPoint->{0.953, 2.826, 2.000}]:[font = section; inactive; preserveAspect; startGroup]Symbolic Calculations:[font = text; inactive; preserveAspect]The real power of mathematica is that expressions can be symbolically manipulated. The basic structure is  the list  {a,b,c,...}Everything is a list, a list of lists, etc.We have the usual operations on lists::[font = input; preserveAspect]{a,b,c} + {1,2,3} :[font = input; preserveAspect]3 {a,b,c}:[font = text; inactive; preserveAspect]And we can take lists apart:[font = input; preserveAspect]{a,b,c} [[2]]:[font = text; inactive; preserveAspect]Let us define a function to find the norm of a vector:[font = input; preserveAspect]norm[ vect_List ] := Sqrt[vect.vect]       (* vect is our variable name; List is its type*);[s]2:0,0;43,1;92,-1;2:1,13,10,Courier,1,12,0,0,0;1,13,10,Times,0,12,0,0,0;:[font = input; preserveAspect]norm[{1,2,3}]:[font = input; preserveAspect]norm[5]   (* Note that typechecking is done; if the input is not a List, nothing happens*);[s]2:0,0;10,1;91,-1;2:1,13,10,Courier,1,12,0,0,0;1,13,10,Times,0,12,0,0,0;:[font = text; inactive; preserveAspect]:[font = text; inactive; preserveAspect]Let us now define a function that inputs a list  and returns  the derivative::[font = input; preserveAspect]velocity[curve_]:= D[curve,t]   (*note that we dont need to typecheck.                                                                                                  But the _ indicates curve is a local variable*) ;[s]2:0,0;32,1;218,-1;2:1,13,10,Courier,1,12,0,0,0;1,13,10,Times,0,12,0,0,0;:[font = input; preserveAspect]velocity[{Sin[t],Cos[t],t}] :[font = text; inactive; preserveAspect]So unit tangent vector is:[font = input; preserveAspect]unittangent[curve_]:= velocity[curve]/norm[curve]  :[font = text; inactive; preserveAspect]If we want to know the velocity at a particular value of t, we can substitute in the value:;[s]3:0,0;37,1;47,0;92,-1;2:2,14,10,Times,0,12,0,0,0;1,14,10,Times,4,12,0,0,0;:[font = input; preserveAspect]:[font = text; inactive; preserveAspect]And of course we can go on.  As a very small example::[font = input; preserveAspect]princUnitNormal[curve_]:= D[ unittangent[curve], t] /norm[ D[ unittangent[curve], t]]:[font = input; preserveAspect; endGroup; endGroup]princUnitNormal[{Sin[t],Cos[t],t}] ^*)